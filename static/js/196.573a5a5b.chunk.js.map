{"version":3,"file":"static/js/196.573a5a5b.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-08-phonebook/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Contacts/Contacts.module.css?5e71","components/Contacts/Contacts.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://goit-react-hw-08-phonebook/./src/pages/Contacts/ContactPage.module.css?3751","pages/Contacts/ContactPage.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"contact__form\":\"ContactForm_contact__form__OjRMi\",\"contact__input\":\"ContactForm_contact__input__pLEHv\",\"contact__button\":\"ContactForm_contact__button__2CFjT\",\"spiner\":\"ContactForm_spiner__EKNb6\"};","import css from '../ContactForm/ContactForm.module.css';\nimport { useState } from 'react';\nimport Spiner from 'components/Spiner/Spiner';\nimport { toast } from 'react-toastify';\nimport {\n  useGetContactsQuery,\n  useCreateContactMutation,\n} from \"../../redux/contact/contsctsApi\"\nimport 'react-toastify/dist/ReactToastify.css';\n\n\nexport default function ContactForm () {\n\n  const [createContact, { isLoading }] = useCreateContactMutation();\n\n  const { data: contacts } = useGetContactsQuery();\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n      const inputChange = (e) => {\n        const { name, value } = e.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        throw new Error();\n      }\n    };\n    \n        const formSubmit = async e => {\n          const contact = { name, number };\n          e.preventDefault();\n          const normalzeName = contact.name.toLocaleLowerCase();\n          if (contacts.find(item => item.name.toLocaleLowerCase() === normalzeName)) {\n            return   (toast(`${name} is already in contacts`, {\n              position: 'top-right',\n              autoClose: 3000,\n              hideProgressBar: false,\n              closeOnClick: true,\n              pauseOnHover: true,\n              draggable: true,\n              progress: undefined,\n            })\n            )\n          }\n          await createContact(contact);\n          \n          \n          setName('');\n          setNumber('');\n   \n        };\n      \n        \n\n    \n        return(\n            <form onSubmit={formSubmit} className={css.contact__form}>\n            <input\n              type=\"text\"\n              name=\"name\"\n              value={name}\n              onChange={inputChange}\n              placeholder=\"Name\"\n              className={css.contact__input}\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n              required\n            />\n            <input\n              type=\"tel\"\n              name=\"number\"\n              value={number}\n              placeholder=\"Number\"\n              onChange={inputChange}\n              className={css.contact__input}\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n              required\n            />\n            <button className={css.contact__button} type=\"submit\">{isLoading ? <div className={css.spiner}><Spiner/></div> : 'Add contac'}t</button>\n          </form>\n        );\n    }\n\n  ","// extracted by mini-css-extract-plugin\nexport default {\"contacts\":\"Contacts_contacts__Eg+6p\",\"contacts__list\":\"Contacts_contacts__list__oD9-W\",\"contacts__button\":\"Contacts_contacts__button__Cn2tl\",\"contact__button\":\"Contacts_contact__button__4X-Ru\",\"contacts__items\":\"Contacts_contacts__items__T7VSI\",\"contacts__text\":\"Contacts_contacts__text__5yaUv\",\"spiner\":\"Contacts_spiner__PJ-Cv\"};","import css from '../Contacts/Contacts.module.css';\nimport { useSelector } from 'react-redux';\n\n\nimport {useGetContactsQuery, useDeleteContactMutation,\n} from \"../../redux/contact/contsctsApi\";\n\nimport { getFilter } from \"../../redux/contact/contactsFilter\";\nimport PropTypes from 'prop-types';\n\n\n\n\nconst Contacts = () => {\n\n  const { data: contacts} = useGetContactsQuery();\n  const filterValue = useSelector(getFilter);\n\n\n  const getContactsFilter = () => {\n    const normalizedFilter = filterValue.toLocaleLowerCase();\n    return (\n      contacts &&\n      contacts.filter(contact =>\n        contact.name.toLocaleLowerCase().includes(normalizedFilter)\n      )\n    );\n  };\n  const filterContacts = getContactsFilter();\n\n  const [deleteContact, { isLoading: isDeleting }] = useDeleteContactMutation();\n\n   return   ( <div className={css.contacts}>\n                <ul className={css.contacts__list}>\n                    { contacts && filterContacts.map(({id, name, number}) => {\n                        return(\n                            <li className={css.contacts__items} key={id}>\n                                <p className={css.contacts__text}>\n                                    {name}: {number}\n                                </p>\n                                <button\n                                    className={css.contact__button}\n                                    type=\"button\" \n                                    onClick={() => deleteContact(id)}\n                                    disabled={isDeleting}>\n                                    {isDeleting ? 'deleting...' : 'Delete'}\n                                </button>\n                            </li>\n                        )\n                    })}\n                </ul>\n                </div>\n            );\n        \n};\n\nContacts.propTypes = {\n  contact: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired,\n  }),\n};\nexport default Contacts\n","// extracted by mini-css-extract-plugin\nexport default {\"filter\":\"Filter_filter__vxThR\",\"filter__input\":\"Filter_filter__input__toa89\"};","import css from '../Filter/Filter.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {  filter, getFilter } from '../../redux/contact/contactsFilter'; \n\nconst Filter = () => {\n\n    const dispatch = useDispatch();\n\n    const filterValue = useSelector(getFilter);\n\n    const changeFilter = e => {\n        dispatch(filter(e.currentTarget.value.toLocaleLowerCase().trim()));\n      };\n\n    return (<form className={css.filter}>\n                <input\n                type=\"text\"\n                value={filterValue}\n                onChange={changeFilter}\n                className={css.filter__input}\n                placeholder=\"Find contacts by name\"\n                />\n            </form>);\n};\n\nexport default Filter\n","// extracted by mini-css-extract-plugin\nexport default {\"contast_h\":\"ContactPage_contast_h__4dSu2\"};","import ContactForm from \"components/ContactForm/ContactForm\";\nimport Contacts from \"components/Contacts/Contacts\";\nimport Filter from \"components/Filter/Filter\";\nimport css from \"./ContactPage.module.css\"\n\n\nconst ContactsPage = () => {\n\n\n    return(\n        <section>\n            <h1 className={css.contast_h}>create contact</h1>\n            <ContactForm/>\n            <h2 className={css.contast_h}>contact search</h2>\n            <Filter/>\n            <Contacts/>\n        </section>\n    )\n}\n\nexport default ContactsPage"],"names":["ContactForm","useCreateContactMutation","createContact","isLoading","contacts","useGetContactsQuery","data","useState","name","setName","number","setNumber","inputChange","e","target","value","Error","formSubmit","contact","preventDefault","normalzeName","toLocaleLowerCase","find","item","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","onSubmit","className","css","type","onChange","placeholder","pattern","title","required","Spiner","filterValue","useSelector","getFilter","filterContacts","normalizedFilter","filter","includes","getContactsFilter","useDeleteContactMutation","deleteContact","isDeleting","map","id","onClick","disabled","dispatch","useDispatch","currentTarget","trim"],"sourceRoot":""}